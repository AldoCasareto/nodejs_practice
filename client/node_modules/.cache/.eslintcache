[{"/Users/aldocasareto/nodejscourse/nasa-project/client/src/index.js":"1","/Users/aldocasareto/nodejscourse/nasa-project/client/src/App.js":"2","/Users/aldocasareto/nodejscourse/nasa-project/client/src/settings.js":"3","/Users/aldocasareto/nodejscourse/nasa-project/client/src/pages/AppLayout.js":"4","/Users/aldocasareto/nodejscourse/nasa-project/client/src/pages/Upcoming.js":"5","/Users/aldocasareto/nodejscourse/nasa-project/client/src/pages/Launch.js":"6","/Users/aldocasareto/nodejscourse/nasa-project/client/src/pages/History.js":"7","/Users/aldocasareto/nodejscourse/nasa-project/client/src/hooks/usePlanets.js":"8","/Users/aldocasareto/nodejscourse/nasa-project/client/src/hooks/useLaunches.js":"9","/Users/aldocasareto/nodejscourse/nasa-project/client/src/components/Centered.js":"10","/Users/aldocasareto/nodejscourse/nasa-project/client/src/components/Footer.js":"11","/Users/aldocasareto/nodejscourse/nasa-project/client/src/components/Header.js":"12","/Users/aldocasareto/nodejscourse/nasa-project/client/src/components/Clickable.js":"13","/Users/aldocasareto/nodejscourse/nasa-project/client/src/hooks/requests.js":"14"},{"size":152,"mtime":1646480464580,"results":"15","hashOfConfig":"16"},{"size":673,"mtime":1646480464577,"results":"17","hashOfConfig":"16"},{"size":1185,"mtime":1646480464581,"results":"18","hashOfConfig":"16"},{"size":2704,"mtime":1646480464580,"results":"19","hashOfConfig":"16"},{"size":1891,"mtime":1646480464581,"results":"20","hashOfConfig":"16"},{"size":2379,"mtime":1646498287480,"results":"21","hashOfConfig":"16"},{"size":1455,"mtime":1646480464581,"results":"22","hashOfConfig":"16"},{"size":426,"mtime":1646491190941,"results":"23","hashOfConfig":"16"},{"size":1746,"mtime":1646480464579,"results":"24","hashOfConfig":"16"},{"size":462,"mtime":1646480464577,"results":"25","hashOfConfig":"16"},{"size":425,"mtime":1646480464578,"results":"26","hashOfConfig":"16"},{"size":2623,"mtime":1646480464578,"results":"27","hashOfConfig":"16"},{"size":384,"mtime":1646480464578,"results":"28","hashOfConfig":"16"},{"size":592,"mtime":1646491863088,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"3f2y82",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/aldocasareto/nodejscourse/nasa-project/client/src/index.js",[],["60","61"],"/Users/aldocasareto/nodejscourse/nasa-project/client/src/App.js",[],"/Users/aldocasareto/nodejscourse/nasa-project/client/src/settings.js",[],"/Users/aldocasareto/nodejscourse/nasa-project/client/src/pages/AppLayout.js",[],"/Users/aldocasareto/nodejscourse/nasa-project/client/src/pages/Upcoming.js",[],"/Users/aldocasareto/nodejscourse/nasa-project/client/src/pages/Launch.js",[],"/Users/aldocasareto/nodejscourse/nasa-project/client/src/pages/History.js",[],"/Users/aldocasareto/nodejscourse/nasa-project/client/src/hooks/usePlanets.js",[],"/Users/aldocasareto/nodejscourse/nasa-project/client/src/hooks/useLaunches.js",["62","63"],"import { useCallback, useEffect, useState } from \"react\";\n\nimport {\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n} from './requests';\n\nfunction useLaunches(onSuccessSound, onAbortSound, onFailureSound) {\n  const [launches, saveLaunches] = useState([]);\n  const [isPendingLaunch, setPendingLaunch] = useState(false);\n\n  const getLaunches = useCallback(async () => {\n    const fetchedLaunches = await httpGetLaunches();\n    saveLaunches(fetchedLaunches);\n  }, []);\n\n  useEffect(() => {\n    getLaunches();\n  }, [getLaunches]);\n\n  const submitLaunch = useCallback(async (e) => {\n    e.preventDefault();\n    // setPendingLaunch(true);\n    const data = new FormData(e.target);\n    const launchDate = new Date(data.get(\"launch-day\"));\n    const mission = data.get(\"mission-name\");\n    const rocket = data.get(\"rocket-name\");\n    const target = data.get(\"planets-selector\");\n    const response = await httpSubmitLaunch({\n      launchDate,\n      mission,\n      rocket,\n      target,\n    });\n\n    // TODO: Set success based on response.\n    const success = false;\n    if (success) {\n      getLaunches();\n      setTimeout(() => {\n        setPendingLaunch(false);\n        onSuccessSound();\n      }, 800);\n    } else {\n      onFailureSound();\n    }\n  }, [getLaunches, onSuccessSound, onFailureSound]);\n\n  const abortLaunch = useCallback(async (id) => {\n    const response = await httpAbortLaunch(id);\n\n    // TODO: Set success based on response.\n    const success = false;\n    if (success) {\n      getLaunches();\n      onAbortSound();\n    } else {\n      onFailureSound();\n    }\n  }, [getLaunches, onAbortSound, onFailureSound]);\n\n  return {\n    launches,\n    isPendingLaunch,\n    submitLaunch,\n    abortLaunch,\n  };\n}\n\nexport default useLaunches;","/Users/aldocasareto/nodejscourse/nasa-project/client/src/components/Centered.js",[],"/Users/aldocasareto/nodejscourse/nasa-project/client/src/components/Footer.js",[],"/Users/aldocasareto/nodejscourse/nasa-project/client/src/components/Header.js",[],"/Users/aldocasareto/nodejscourse/nasa-project/client/src/components/Clickable.js",[],"/Users/aldocasareto/nodejscourse/nasa-project/client/src/hooks/requests.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":30,"column":11,"nodeType":"70","messageId":"71","endLine":30,"endColumn":19},{"ruleId":"68","severity":1,"message":"69","line":51,"column":11,"nodeType":"70","messageId":"71","endLine":51,"endColumn":19},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]